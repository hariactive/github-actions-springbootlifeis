name: Spring Boot CI/CD with Docker

on: 
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE: springboot-lifeis
  DOCKERHUB_USERNAME: hari7706shukla@gmail.com    # 👈 Change this to your Docker Hub username
  DOCKERHUB_PASSWORD: haridocker      # 👈 Change this to your Docker Hub password (real one for your local use only)

jobs:
  build-test-docker:
    name: 🏗️ Build, Test & Dockerize
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout your code from GitHub
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Setup Java 21 using Temurin distribution
    - name: ☕ Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    # Step 3: Build and test your Spring Boot application
    - name: 🔨 Build and test
      run: |
        echo "Starting Maven build..."
        mvn clean compile
        echo "Running tests..."
        mvn test
        echo "Packaging JAR..."
        mvn package -DskipTests
        echo "✅ Build completed successfully!"
        
    # Step 4: Build Docker image from Dockerfile
    - name: 🐳 Build Docker image
      run: |
        echo "Building Docker image..."
        docker build -t $DOCKER_IMAGE .
        echo "Docker images:"
        docker images
        echo "✅ Docker image built successfully!"

    # Step 5: Log in to Docker Hub (⚠️ Uses password directly)
    - name: 🔐 Docker Hub Login
      run: |
        echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
        echo "✅ Logged in to Docker Hub successfully!"

    # Step 6: Push Docker image to Docker Hub
    - name: 🚀 Push Docker Image
      run: |
        docker tag $DOCKER_IMAGE $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest
        docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest
        echo "✅ Docker image pushed to Docker Hub successfully!"
        
    # Step 7: Upload build artifacts (optional)
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: springboot-app
        path: |
          target/*.jar
          Dockerfile
        
    # Step 8: Final success message
    - name: 🎉 Pipeline Success
      run: |
        echo "=========================================="
        echo "🚀 CI/CD PIPELINE COMPLETED SUCCESSFULLY!"
        echo "📦 JAR File: target/*.jar"
        echo "🐳 Docker Image: $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest"
        echo "⭐ Ready for deployment on Docker Hub!"
        echo "=========================================="
